package plans

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestThatOptimizeScheduleLinesIsCorrect(t *testing.T) {
	scheduleLines := [][]string{
		{"0", "1000", "1001", "938.2", "00:00:00", "00:00:00"},
		{"1", "1000", "1001", "1028.2", "00:00:00", "00:00:00"},
		{"2", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"3", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
		{"4", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"5", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
		{"6", "1002", "1003", "234", "00:00:00", "00:00:00"},
		{"7", "1002", "1003", "4665", "00:00:00", "00:00:00"},
	}

	expected := [][]string{
		{"2", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"3", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
		{"4", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"5", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
	}

	actual := optimizeScheduleLines(scheduleLines)

	assert.Equal(t, expected, actual)
}

func TestThatFindMinPriceIsCorrect(t *testing.T) {
	scheduleLines := [][]string{
		{"0", "1000", "1001", "938.2", "00:00:00", "00:00:00"},
		{"1", "1000", "1001", "1028.2", "00:00:00", "00:00:00"},
		{"2", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"3", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
	}
	observedRoute := route{"1000", "1001"}
	expected := "32.3"

	actual := findMinPrice(observedRoute, scheduleLines)

	assert.Equal(t, expected, actual)
}

func TestThatLeaveOnlyRidesWithMinPriceIsCorrect(t *testing.T) {
	scheduleLines := [][]string{
		{"0", "1000", "1001", "938.2", "00:00:00", "00:00:00"},
		{"1", "1000", "1001", "1028.2", "00:00:00", "00:00:00"},
		{"2", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"3", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
		{"4", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
	}
	observedRoute := route{"1000", "1001"}
	minPrice := "32.3"
	expected := [][]string{
		{"2", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
		{"3", "1002", "1003", "32.3", "00:00:00", "00:00:00"},
		{"4", "1000", "1001", "32.3", "00:00:00", "00:00:00"},
	}

	actual := leaveOnlyRidesWithMinPrice(observedRoute, minPrice, scheduleLines)

	assert.Equal(t, expected, actual)
}
